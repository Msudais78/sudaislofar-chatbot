Create a simple, stylish, and interactive web-based chatbot named "Sudaislofar". The chatbot's primary feature is its personality: it must communicate in a friendly, casual, and natural-sounding Hinglish (a mix of Hindi and English). It should be able to answer common questions and engage in simple conversation.

Core Technologies:
Frontend: HTML, CSS, and modern JavaScript (ES6+). No complex frameworks are needed.

Fonts: Use a clean, readable font like 'Poppins' or 'Inter' from Google Fonts.

Chatbot Personality & Language:
Name: Sudaislofar

Tone: Very friendly, informal, and a bit witty. It should feel like talking to a friend.

Language: Primarily Hinglish. It should use common Hinglish phrases and sentence structures.

Example Phrases: "Aur batao, sab theek?", "Tension nahi lene ka.", "Main aapki kya help kar sakta hoon?", "Scene on hai, bhai!"

Design and User Interface (UI):
Theme: A modern dark theme.

Background: A dark charcoal color (e.g., #1a1a1a).

Chat Window: A slightly lighter dark color (e.g., #2c2c2c).

User's Messages: A cool blue bubble.

Bot's Messages: A neutral gray bubble.

Layout:

Chat Container: A centered, fixed-size container that looks like a mobile app screen.

Header: A clean header at the top with the chatbot's name, "Sudaislofar".

Message Window: The main area where the conversation appears. It must be scrollable.

Input Area: A footer section containing a text input field with a placeholder like "Kuch pucho..." and a "Send" button.

User Experience:

Messages should appear with a subtle fade-in animation.

The chat window should automatically scroll to the latest message.

Include a "typing..." indicator to simulate the bot thinking before it responds.

Functionality (JavaScript Logic):
The Chatbot's "Brain":

Create a JavaScript object to store predefined responses.

Use keywords as keys. For each keyword, the value should be an array of possible Hinglish responses. This allows the bot to give varied answers.

Example Structure:

const responses = {
  "greetings": ["Salaam! Kya haal chaal?", "Aur batao, sab fit?"],
  "how_are_you": ["Main ekdum mast, aap sunao?", "Alhamdulillah, sab changa si."],
  "name": ["Mera naam hai Sudaislofar, aapka?", "Log mujhe प्यार से Sudaislofar bulate hain."],
  "default": ["Sorry yaar, ye to mere samajh se bahar hai.", "Iske baare mein to mujhe nahi pata."]
};

Input Processing:

Write a function that takes the user's input text.

It should convert the input to lowercase and check for the presence of keywords (e.g., 'kaise ho', 'naam', 'hello').

If a keyword is found, it should randomly pick one of the corresponding responses from the "brain".

If no keywords match, it should return a default response.

Event Handling:

Add an event listener to the "Send" button and also listen for the "Enter" key press in the input field.

When the user sends a message:

Display the user's message in the chat window.

Clear the input field.

Show the "typing..." indicator for 1-2 seconds.

Remove the indicator and display the bot's generated response.

Example Conversation Flow:
Bot (Initial Message): "Salaam! Main Sudaislofar hoon. Chalo gupshup karte hain!"

User: "Hi, kaise ho?"

(Bot shows "typing..." indicator)

Bot: "Main ekdum mast, aap sunao?"

User: "tumhara naam kya hai"

(Bot shows "typing..." indicator)

Bot: "Mera naam hai Sudaislofar, aapka?"